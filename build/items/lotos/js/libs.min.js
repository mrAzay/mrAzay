function pageslider(e,s){var d,r,n,o,t,i,l=document.body,u=e.children,a=document.documentElement.clientHeight||window.innerHeight,c=window.location,m=c.hash,v=0,p=0,g=u[p],h=u.length-1,f=e.children.length,L=Math.round(f/2),E=.7,w=1e3*E,y=!1,A=document.getElementById("pageslider__to-top"),T=document.querySelector(".menu__links ul").children,b=document.getElementById("pageslider__for-text"),S=document.getElementById("b-navkey__prev"),D=document.querySelectorAll(".next-page__text"),_=["You can...","... add some text ...","... which depends of ...","... slide ...","Oliw Page Slider"],B="layout";if("layout"==B){B=[];for(var P=0;P<T.length;P++)k=T[P].querySelector("a").getAttribute("href"),B.push(k)}if(B){var k,C=/^#./;for(P=0;P<B.length;P++){if(m==(k=C.test(B[P])?B[P]:"#"+B[P])){g=u[p=P];break}P==B.length-1&&(c.hash=B[0])}}if(g.classList.add("active"),F(p),document.addEventListener("touchstart",function(e){t=e.changedTouches[0].clientY,Math.round(g.children[0].getBoundingClientRect().top)},!1),document.addEventListener("touchmove",function(e){e.changedTouches[0].clientY},!1),document.addEventListener("touchend",function(e){i=e.changedTouches[0],Math.abs(t-i.clientY),g.style.transform="",i.clientY<t?M(1):M(-1)},!1),document.addEventListener("keydown",function(e){var t,n=e.keyCode;38==(t=n)?(noActivePage=p,M(-1)):40==t&&(noActivePage=p,M(1))},!1),window.addEventListener("scrollDown",function(e){M(1)}),window.addEventListener("scrollUp",function(e){M(-1)}),window.addEventListener("resize",function(e){a=window.innerHeight||document.documentElement.clientHeight}),S&&(S.addEventListener("click",function(e){q()},!1),S.addEventListener("touchend",function(e){q()},!1)),D&&D.forEach(function(e){e.addEventListener("click",function(e){H()},!1),e.addEventListener("touchend",function(e){H()},!1)}),A&&(A.addEventListener("click",function(e){Y()},!1),A.addEventListener("touchend",function(e){Y()},!1)),null!==T)for(P=0;P<T.length;P++)T[P].num=P,T[P].addEventListener("click",function(e){e.preventDefault(),x(this)},!1),T[P].addEventListener("touchend",function(e){e.preventDefault(),x(this)},!1);function M(e){var t=g.children[0];t.clientHeight>a?(n=Math.round(t.getBoundingClientRect().top),o=-(t.clientHeight-a),(n<=o&&0<e||0<=n&&e<0)&&z(e,w)):z(e,w)}function Y(){0!=p&&(p<L?(noActivePage=p,z(-1,E,!0,0,noActivePage)):(noActivePage=p,z(1,E,!0,0,noActivePage)))}function F(e){l.setAttribute("data-pageslider-progress",Math.round(100/(f-1)*e)),l.setAttribute("data-pageslider-number",e+1),null!==T&&T[e].classList.add("active"),setTimeout(function(){_&&b&&(b.innerHTML=_[e]),B&&(c.hash=B[e])},w-700)}function q(){0==p?z(1,E,!0,h,p):z(-1,w)}function H(){p==h?z(-1,E,!0,0,p):z(1,w)}function x(e){var t=e.num;t<p?(noActivePage=p,z(-1,E,!0,t,noActivePage)):p<t&&(noActivePage=p,z(1,E,!0,t,noActivePage))}function I(){for(var e=h;0<=e;e--)u[e].classList.remove("active"),null!==T&&T[e].classList.remove("active")}function z(e,t,n,o,i){if(t<(d=Date.now())-v){s&&s(),l.classList.add("onanimation"),document.querySelector(".menu__links").classList.contains("showMenu")&&document.querySelector(".menu__links").classList.remove("showMenu");var a=document.querySelector(".popup-one"),c=document.querySelector(".popup-two");a.classList.remove("active-popup"),c.classList.remove("active-popup"),0<e?n?(I(),g=u[p=o],r=u[i],g.classList.add("pt-page-moveFromBottom"),g.classList.add("active"),r.classList.add("active"),r.classList.add("pt-page-ontop"),r.classList.add("pt-page-moveToTop"),F(p),setTimeout(O,w),v=d):p!=h?(I(),g=u[++p],r=u[p].previousElementSibling,g.classList.add("active"),g.classList.add("pt-page-moveFromBottom"),r.classList.add("active"),r.classList.add("pt-page-ontop"),r.classList.add("pt-page-moveToTop"),F(p),setTimeout(O,w),v=d):p==h&&y&&(I(),g=u[p=0],r=u[h],g.classList.add("active"),g.classList.add("pt-page-moveFromBottom"),r.classList.add("active"),r.classList.add("pt-page-ontop"),r.classList.add("pt-page-moveToTop"),F(p),setTimeout(O,w),v=d):e<0&&(n?(I(),g=u[p=o],r=u[i],g.classList.add("active"),g.classList.add("pt-page-ontop"),g.classList.add("pt-page-moveFromTop"),r.classList.add("active"),r.classList.add("pt-page-moveToBottom"),F(p),setTimeout(O,w),v=d):0!=p?(I(),g=u[--p],r=u[p].nextElementSibling,g.classList.add("active"),g.classList.add("pt-page-ontop"),g.classList.add("pt-page-moveFromTop"),r.classList.add("active"),r.classList.add("pt-page-moveToBottom"),F(p),setTimeout(O,w),v=d):0==p&&y&&(I(),g=u[h],r=u[p],p=h,g.classList.add("active"),g.classList.add("pt-page-ontop"),g.classList.add("pt-page-moveFromTop"),r.classList.add("active"),r.classList.add("pt-page-moveToBottom"),F(p),setTimeout(O,w),v=d))}}function O(){for(var e=h;0<=e;e--){l.classList.remove("onanimation");var t=u[e].classList;t.remove("active"),t.remove("pt-page-ontop"),t.remove("pt-page-moveFromBottom"),t.remove("pt-page-moveToTop"),t.remove("pt-page-moveToBottom"),t.remove("pt-page-moveFromTop")}g.classList.add("active")}}!function(){var e,t={last5values:[0,0,0,0,0],memoryAcceleration:[0,0,0],isAcceleration:!1,isStopped:!0,direction:"",delta:"",timer:"",onWheel:"onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"MozMousePixelScroll",addEvent:function(e,t,n){window.addEventListener&&e.addEventListener(t,n,!1),window.attachEvent&&e.attachEvent("on"+t,n)},getDeltaY:function(e){return e.wheelDelta?t.getDeltaY=function(e){return e.wheelDelta/-120}:t.getDeltaY=function(e){return e.deltaY},t.getDeltaY(e)},processDelta:function(e){var t,n=this,o=0;if(n.direction=direction=0<e?"down":"up",n.delta=Math.abs(e),clearTimeout(n.timer),n.timer=setTimeout(function(){n.last5values=[0,0,0,0,0],n.memoryAcceleration=[0,0,0],n.isStopped=!0,n.isAcceleration=!1},200),n.isStopped)n.triggerEvent(),n.isStopped=!1,n.isAcceleration=!0,o=1,n.memoryAcceleration.shift(),n.memoryAcceleration.push(o);else{for(n.last5values.shift(),n.last5values.push(n.delta),t=5;t--;)n.last5values[t-1]<n.last5values[t]&&o++;n.memoryAcceleration.shift(),n.memoryAcceleration.push(o),n.memoryAcceleration[2]<n.memoryAcceleration[1]&&n.memoryAcceleration[1]<n.memoryAcceleration[0]&&(n.isAcceleration=!1),n.memoryAcceleration[2]>n.memoryAcceleration[1]&&n.memoryAcceleration[1]>n.memoryAcceleration[0]&&(n.isAcceleration||(n.isAcceleration=!0,n.triggerEvent()))}},triggerEvent:(e=function(){try{new CustomEvent("IE has CustomEvent, but doesn't support constructor")}catch(e){window.CustomEvent=function(e,t){var n;return t=t||{bubbles:!1,cancelable:!1,detail:void 0},(n=document.createEvent("CustomEvent")).initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n},CustomEvent.prototype=Object.create(window.Event.prototype)}var e=new CustomEvent("scrollUp"),t=new CustomEvent("scrollDown");triggerEvent=function(){"up"===this.direction?window.dispatchEvent(e):window.dispatchEvent(t)},triggerEvent()},n.toString=function(){return e.toString()},n)};function n(){return e.apply(this,arguments)}t.addEvent(document,t.onWheel,function(e){t.processDelta(t.getDeltaY(e))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
